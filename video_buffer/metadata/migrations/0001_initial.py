# Generated by Django 4.2 on 2024-10-03 07:27

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Filter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('filter_name', models.CharField(help_text='The internal name of the filter.', max_length=255)),
                ('type', models.CharField(help_text="The data type of the filter (e.g., 'enum').", max_length=50)),
                ('is_active', models.BooleanField(default=True, help_text='Indicates if the filter is currently active.')),
            ],
            options={
                'verbose_name_plural': 'Filters',
                'db_table': 'filter',
            },
        ),
        migrations.CreateModel(
            name='FilterItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item_key', models.CharField(help_text="The internal key for the filter item (e.g., 'impurity').", max_length=255)),
                ('is_active', models.BooleanField(default=True, help_text='Indicates if the filter item is currently active.')),
                ('filter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='metadata.filter')),
            ],
            options={
                'verbose_name_plural': 'Filter Items',
                'db_table': 'filter_item',
            },
        ),
        migrations.CreateModel(
            name='Metadata',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('primary_key', models.CharField(help_text='The column name used as the primary key.', max_length=255)),
                ('description', models.TextField(blank=True, help_text='Optional description of the metadata.', null=True)),
            ],
            options={
                'verbose_name_plural': 'Metadata',
                'db_table': 'metadata',
            },
        ),
        migrations.CreateModel(
            name='MetadataColumn',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('column_name', models.CharField(help_text='The internal name of the column.', max_length=255)),
                ('type', models.CharField(help_text="The data type of the column (e.g., 'string').", max_length=50)),
                ('is_required', models.BooleanField(default=False, help_text='Indicates if this column is required.')),
                ('is_active', models.BooleanField(default=True, help_text='Indicates if this column is currently active.')),
                ('metadata', models.ForeignKey(help_text='The metadata this column belongs to.', on_delete=django.db.models.deletion.CASCADE, related_name='columns', to='metadata.metadata')),
            ],
            options={
                'verbose_name_plural': 'Metadata Columns',
                'db_table': 'metadata_column',
            },
        ),
        migrations.CreateModel(
            name='MetadataLocalization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language', models.CharField(help_text="ISO 639-1 language code, e.g., 'en', 'de'.", max_length=10)),
                ('title', models.CharField(help_text='Localized title of the column.', max_length=255)),
                ('description', models.TextField(blank=True, help_text='Localized description of the column.', null=True)),
                ('metadata_column', models.ForeignKey(help_text='The metadata column being localized.', on_delete=django.db.models.deletion.CASCADE, related_name='localizations', to='metadata.metadatacolumn')),
            ],
            options={
                'verbose_name_plural': 'Metadata Localizations',
                'db_table': 'metadata_localization',
            },
        ),
        migrations.CreateModel(
            name='FilterLocalization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language', models.CharField(help_text="ISO 639-1 language code, e.g., 'en', 'de'.", max_length=10)),
                ('title', models.CharField(help_text='Localized title of the filter.', max_length=255)),
                ('description', models.TextField(blank=True, help_text='Localized description of the filter.', null=True)),
                ('filter', models.ForeignKey(help_text='The filter being localized.', on_delete=django.db.models.deletion.CASCADE, related_name='localizations', to='metadata.filter')),
            ],
            options={
                'verbose_name_plural': 'Filter Localizations',
                'db_table': 'filter_localization',
            },
        ),
        migrations.CreateModel(
            name='FilterItemLocalization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language', models.CharField(help_text="ISO 639-1 language code, e.g., 'en', 'de'.", max_length=10)),
                ('item_value', models.CharField(help_text='Localized value of the filter item.', max_length=255)),
                ('filter_item', models.ForeignKey(help_text='The filter item being localized.', on_delete=django.db.models.deletion.CASCADE, related_name='localizations', to='metadata.filteritem')),
            ],
            options={
                'verbose_name_plural': 'Filter Item Localizations',
                'db_table': 'filter_item_localization',
            },
        ),
        migrations.AddIndex(
            model_name='filter',
            index=models.Index(fields=['filter_name'], name='filter_filter__f0bccc_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='filter',
            unique_together={('filter_name',)},
        ),
        migrations.AddIndex(
            model_name='metadatalocalization',
            index=models.Index(fields=['metadata_column', 'language'], name='metadata_lo_metadat_651cbe_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='metadatalocalization',
            unique_together={('metadata_column', 'language')},
        ),
        migrations.AddIndex(
            model_name='metadatacolumn',
            index=models.Index(fields=['metadata', 'column_name'], name='metadata_co_metadat_4b7592_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='metadatacolumn',
            unique_together={('metadata', 'column_name')},
        ),
        migrations.AddIndex(
            model_name='filterlocalization',
            index=models.Index(fields=['filter', 'language'], name='filter_loca_filter__f28b99_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='filterlocalization',
            unique_together={('filter', 'language')},
        ),
        migrations.AddIndex(
            model_name='filteritemlocalization',
            index=models.Index(fields=['filter_item', 'language'], name='filter_item_filter__a3a602_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='filteritemlocalization',
            unique_together={('filter_item', 'language')},
        ),
        migrations.AddIndex(
            model_name='filteritem',
            index=models.Index(fields=['filter', 'item_key'], name='filter_item_filter__3ff9a8_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='filteritem',
            unique_together={('filter', 'item_key')},
        ),
    ]
